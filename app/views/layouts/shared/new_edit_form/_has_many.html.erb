<% 
	single = instance_variable_get("@#{assoc.to_s.singularize}")
	coll = instance_variable_get("@#{assoc.to_s}")

	## be always singular due to js api targetting elements
	if (defined? html_class)&&(!html_class.blank?)
		klass = html_class.to_s
	else
		klass = "#{assoc.to_s.singularize}_select"
	end

	html_id = "#{klass}_#{(obj.object.try(:id) || 0).to_s}"
%>

<article 
 class="decorated_wrap shrinked <%= klass %>"
 id="<%= html_id %>"
>

	<input type="hidden" name="assoc-type" value="has_many">

	<div>
		<%= obj.fields_for assoc.to_sym, single do |a| %>

			<% if a.object.id.blank? %>

				<% fields.each do |field_name, opts| %>
					<%= render('layouts/elements/input_text',
						field_name: field_name,
						obj: a,
						opts: opts
					) %>
				<% end %>

				<div>
					<%= a.label(
						"allow_search_as_new",
						t('search.search_as_new')
					) %>
					<%= a.check_box(
						:allow_search_as_new,
						{ 
							#id: "#{assoc.to_s.singularize}_allow_add_new_#{obj.object.id.to_s}",
							class: "#{assoc.to_s.singularize}_allow_add_new allow_add_new",
							checked: (@MEM.allow_add_new)["#{assoc.to_s}"]
						},
						1,
						0
					) %>
				</div>
				
			<% end %>

		<% end %>

	</div>

	<%= render('/layouts/elements/table_list_checkboxes',
		obj: obj.object,
		coll: coll,
		text_method: fields.keys
	) %>
	
	<%= render('layouts/elements/input_fields_error',
		obj: obj,
		fields: fields,
		assoc: single
	) %>

</article>