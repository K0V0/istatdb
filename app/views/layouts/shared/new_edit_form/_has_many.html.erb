<%
	single = instance_variable_get("@#{assoc.to_s.singularize}")
	coll = instance_variable_get("@#{assoc.to_s}")
	klass = generate_search_window_class(html_class, assoc)
	html_id = "#{klass}_#{(obj.object.try(:id) || 0).to_s}"
%>

<article
	class="decorated_wrap shrinked <%= klass %>"
 	id="<%= html_id %>"
 	<%= generate_search_query_attribute(searcher_settings, assoc, fields) %>
>

	<input type="hidden" name="assoc-type" value="has_many">

	<% if !params[:will_paginate].blank? %>
		<% if params[:will_paginate].include? assoc %>
			<input type="hidden" name="load-limit" value="<%= 25 %>">
			<input type="hidden" name="page_num" value="<%= 1 || coll.current_page %>">
		<% end %>
	<% end %>

	<%= generate_search_window_caption(searcher_settings, assoc) %>

	<%= obj.fields_for assoc.to_sym, single do |a| %>

		<% if a.object.id.blank? %>
			<div>

				<% fields.each do |field_name, opts| %>
					<%= render('layouts/elements/input_text',
						field_name: field_name,
						obj: a,
						opts: opts
					) %>
				<% end %>

				<%= render 'layouts/elements/input_fields_reset_button' %>

				<div>
					<%= a.label(
						"allow_search_as_new",
						t('search.search_as_new')
					) %>
					<%= a.check_box(
						:allow_search_as_new,
						{
							class: "#{assoc.to_s.singularize}_allow_add_new allow_add_new",
							checked: (@MEM.allow_add_new)["#{assoc.to_s}_#{a.index}"]
						},
						1,
						0
					) %>

				</div>

			</div>
		<% end %>

	<% end %>

	<%= render('/layouts/elements/table_list_checkboxes',
		obj: obj.object,
		coll: coll,
		text_method: fields.keys,
		opts: fields
	) if coll.length > 0 %>

	<%= render('/layouts/shared/new_edit_form/not_any_record') if coll.length == 0 %>

	<%= render('layouts/elements/input_fields_error',
		obj: obj,
		fields: fields,
		assoc: single
	) %>

</article>
