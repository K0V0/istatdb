<% 
	single = instance_variable_get("@#{assoc.to_s}")
	coll = instance_variable_get("@#{assoc.to_s.pluralize}")

	if (defined? html_class)&&(!html_class.blank?)
		klass = html_class.to_s
	else
		klass = "#{assoc.to_s}_select"
	end

	html_id = "#{klass}_#{(obj.object.try(:id) || 0).to_s}"
%>

<article 
 class="decorated_wrap shrinked <%= klass %>"
 id="<%= html_id %>"
>

	<input type="hidden" name="assoc-type" value="belongs_to">

	<div>
		<%= obj.fields_for assoc.to_sym, single do |a| %>

			<% fields.each do |field_name, opts| %>
				<%= render('layouts/elements/input_text',
					field_name: field_name,
					obj: a,
					opts: opts
				) %>
			<% end %>

			<div>
				<%= a.label(
					"allow_search_as_new",
					t('search.search_as_new')
				) %>
				<%= a.check_box(
					:allow_search_as_new,
					{ 
						#id: "#{assoc.to_s.singularize}_allow_add_new_#{obj.object.id.to_s}",
						class: "#{assoc.to_s.singularize}_allow_add_new allow_add_new",
						checked: @MEM.send("#{assoc.to_s}_allow_add_new")
					},
					1,
					0
				) %>
			</div>

		<% end %>
	</div>

	<%= render('/layouts/elements/table_list_radio_buttons',
		obj: obj.object,
		# main controller singleton instance variable
		coll: coll,
		# collection of all from associated model
		text_method: fields.keys,
		multiedit: defined?(multiedit) 
	) %>

	<%= render('layouts/elements/input_fields_error',
		obj: obj,
		fields: fields,
		assoc: single
	) %>

</article>